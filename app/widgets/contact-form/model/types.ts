import { z } from 'zod'

export const contactSchema = z.object({
	name: z
		.string()
		.min(2, '–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –∏–º—è üëΩ')
		.max(50, '–°–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ –∏–º—è'),
	email: z.string().min(6, '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –ø–æ—á—Ç–∞ ü§ñ'),
	phone: z
		.string()
		.optional()
		.refine(
			val => !val || /^\+?[1-9]\d{1,14}$/.test(val),
			'–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω'
		),
	textMessage: z.string().min(10, '–í—Å—ë –∂–µ –æ–ø–∏—à–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ —Å–≤–æ–π –ø—Ä–æ–µ–∫—Ç üòÅ'),
})

export type ContactSchema = z.infer<typeof contactSchema>

export type ResponseContact = {
	message: string
}
